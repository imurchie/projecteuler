def is_prime?(n)
  2.upto(Math::sqrt(n)) { |i| return false if n % i == 0 }
  true
end


primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997]


# nÂ² + an + b, where |a| < 1000 and |b| < 1000

best_a = 0
best_b = 0
most_primes = 0

-999.upto(999) do |a|
  -999.upto(999) do |b|
    n = 0
    loop do
      # if this is not a prime, see if this is best run yet
      val = n ** 2 + a * n + b
      #puts "a: #{a}, b: #{b}; val: #{val}"
      
      #unless is_prime?(val)
      unless primes.include?(val)
        if n-1 > most_primes
          best_a, best_b = a, b
          most_primes = n-1
        end
        #puts "a=#{a}, b=#{b}, val=#{val}, number=#{n-1}"
        break
      end
      
      if val > 997
        puts "TOO HIGH!!! a=#{a}, b=#{b}, val=#{val}"
        exit
      end
      
      n += 1
    end
  end
end


puts "a: #{best_a}, b: #{best_b}; primes: #{most_primes}"
puts "a * b = #{a * b}"